= simple_form_for [:admin, @page], html: { class: 'form-horizontal', multipart: true } do |form|

  .row
    .col-lg-8
      / Editor

      /#page_embeddable_fields
      /  = render 'embeddable_fields', fields: form

      = translation_manager_for @page, url: translation_fields_admin_pages_path do
        .page-fields
          = form.simple_fields_for :translations do |translation_fields|
            = translation_pane_for translation_fields.object.locale do
              = translation_fields.input :_destroy, as: :hidden, input_html: { class: 'destroy-translation' }
              = translation_fields.input :locale, as: :hidden
              = translation_fields.input :title, label_html: { class: 'col-lg-2' }, container_html: { class: 'col-lg-10' }
              = translation_fields.input :meta_description, label_html: { class: 'col-lg-2' }, container_html: { class: 'col-lg-10' }
              = translation_fields.input :meta_keywords, input_html: { class: 'tokenizer' }, label_html: { class: 'col-lg-2' }, container_html: { class: 'col-lg-10' }
        %hr
        .embeddable-fields
          = render 'embeddable_fields', fields: form

    .col-lg-4
      / Settings
      #page_settings.panel.panel-default.control-panel
        .panel-heading
          %h3.panel-title= translate('views.forms.settings')

        .panel-body
          - if @page.new_record? or @page.embeddable_class.convertible?
            = form.input :embeddable_type, collection: page_types_for_select, include_blank: false, input_html: { class: 'combobox' }, label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }
          #page_embeddable_settings
            = render 'embeddable_settings', fields: form
          - if @page.new_record? or !@page.root?
            = form.input :slug, input_html: { autocomplete: 'off' }, label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }
            - if Page.assignable_as_parent_of(@page).exists?
              = form.association :parent, collection: page_sitemap_collection_for_select(Page.assignable_as_parent_of(@page)), input_html: { rows: 4 }, include_blank: false, label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }
          = form.input :state, collection: Page.states.invert, as: :radio_buttons, include_blank: false, label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }
          = form.input :menu_item, inline_label: translate('simple_form.inline_labels.page.menu_item'), label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }
          = form.input :indexable, inline_label: translate('simple_form.inline_labels.page.indexable'), label_html: { class: 'col-lg-4' }, container_html: { class: 'col-lg-8' }

      = form.button :button, type: 'submit', class: 'btn-primary btn-block' do
        = prepend_icon(:save, translate(@page.new_record? ? :create : :update, scope: 'helpers.submit', model: Page.model_name.human))
      = button_link_to translate('helpers.links.cancel'), :admin_pages, block:true
