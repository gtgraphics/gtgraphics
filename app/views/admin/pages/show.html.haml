.page-header.clearfix
  %h1.pull-left
    = @page.title
  .btn-toolbar.pull-right
    - if @page
      .btn-group.pull-right
        = button_link_to [:edit, :admin, @page], data: { toggle: 'dropdown' }, class: 'dropdown-toggle' do
          = prepend_icon :cog, translate('helpers.links.settings'), fixed_width: true, caption_html: { class: 'sr-only' }
        %ul.dropdown-menu{role: 'menu', aria_labelledby: 'dLabel'}
          - if can? :edit, @page
            %li
              = link_to [:edit, :admin, @page], remote: true do
                = prepend_icon :wrench, translate('helpers.links.options'), fixed_width: true
            - if @page.support_templates?
              %li{class: @page.template.region_definitions.empty? ? 'disabled' : nil}
                = link_to [:admin, @page, :regions] do
                  = prepend_icon :edit, translate('helpers.links.edit_regions'), fixed_width: true
            %li
              = link_to [:edit_metadata, :admin, @page], remote: true do
                = prepend_icon :th_list, translate('helpers.links.edit_metadata'), fixed_width: true

            %li.divider
            - if @page.published?
              %li
                = link_to [:hide, :admin, @page], method: :patch do
                  = prepend_icon :eye_slash, translate('helpers.links.hide'), fixed_width: true
            - else
              %li
                = link_to [:publish, :admin, @page], method: :patch do
                  = prepend_icon :eye, translate('helpers.links.publish'), fixed_width: true
            - if @page.menu_item?
              %li= link_to prepend_icon(:square, translate('helpers.links.disable_in_menu'), outline: true, fixed_width: true), [:disable_in_menu, :admin, @page], method: :patch            
            - else
              %li= link_to prepend_icon(:check_square, translate('helpers.links.enable_in_menu'), outline: true, fixed_width: true), [:enable_in_menu, :admin, @page], method: :patch
            
          - if can? :read, @page
            %li.divider
            %li
              = link_to page_path(@page, locale: Globalize.locale, translations: nil) do
                = prepend_icon :file_picture, translate('helpers.links.view'), fixed_width: true, outline: true

          - if can? :destroy, @page
            %li.divider
            %li= link_to prepend_icon(:trash, translate('helpers.links.destroy'), outline: true, fixed_width: true), [:admin, @page], method: :delete, data: { hotkey: 'del', confirm: translate('helpers.confirmations.destroy', model: Page.model_name.human) }

    .btn-group.pull-right
      = button_link_to typed_new_admin_page_child_path(@page, page_type: :content), type: :success, remote: true, accesskey: 'N' do
        = prepend_icon :plus, translate('helpers.links.new', model: Page.model_name.human), fixed_width: true
      = button_link_to caret, '#', class: 'dropdown-toggle', type: :success, data: { toggle: 'dropdown' }
      %ul.dropdown-menu
        - concrete_page_types.each do |embeddable_class|
          - if can? :create, embeddable_class
            %li
              = link_to typed_new_admin_page_path(@page, embeddable_class), remote: true do
                = embeddable_class.model_name.human

- present @page, with: Admin::PagePresenter do |page|
  %dl.dl-horizontal
    = page.list_item :embeddable_type
    = page.list_item :template if page.support_templates?
    = page.list_item :published
    = page.list_item :translated_locales
    = page.list_item :hits_count
    = page.list_item :updated_at

= try_render "admin/#{@page.embeddable_type.underscore.pluralize}/details", @page.embeddable_class.model_name.element.to_sym => @page.embeddable
