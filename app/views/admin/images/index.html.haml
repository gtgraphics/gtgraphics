#image_upload_dropzone

  = page_header do
    = render 'search_component', search: @image_search, url: :admin_images

  .row

    .col-sm-3
      #filters.panel-group
        - if @tags.any?
          = panel prepend_icon(:tags, Tag.model_name.human(count: 2), fixed_width: true), body: false do
            .list-group#tags
              - @tags.each do |tag, taggings_count|
                - selected_tags = Array(params[:tag])
                - if selected_tags.include?(tag.label)
                  = link_to params.except(:page).merge(tag: (selected_tags - [tag.label]).presence), class: 'list-group-item active' do
                    = tag.label
                    .pull-right
                      = prepend_icon :times, translate('helpers.links.remove'), caption_html: { class: 'sr-only' }
                - else
                  = link_to tag.label, params.except(:page).merge(tag: (selected_tags + [tag.label]).presence), class: 'list-group-item'

        = panel prepend_icon(:user, Image.human_attribute_name(:author_id), fixed_width: true), body: false do
          .list-group#author
            - @users.each do |user|
              - active = user.id == params[:author_id].to_i
              = active_link_to active ? params.except(:page, :author_id) : params.except(:page).merge(author_id: user.to_param), class: 'list-group-item', active: active do
                %span.avatar
                  %span.icon= user_thumbnail_image_tag user, size: 24, class: 'img-circle img-responsive', scope: :admin
                  %span.caption= user.name
                - if active
                  .pull-right
                    = prepend_icon :times, translate('helpers.links.remove'), caption_html: { class: 'sr-only' }

    .col-sm-9
      = form_tag :batch_process_admin_images, method: :patch, remote: true do

        #toolbar.btn-toolbar
          .btn-group
            = button_tag name: 'destroy', class: 'btn btn-danger deactivatable-batch-control', title: translate('helpers.links.destroy_selected'), data: { hotkey: 'del', toggle: 'tooltip', container: 'body', confirm: translate('helpers.confirmations.destroy_selected', model: Image.model_name.human(count: 2)) } do
              = prepend_icon :trash, translate('helpers.links.destroy_selected'), outline: true, caption_html: { class: 'sr-only' }
          .btn-group.only-js
            = button_tag name: 'assign_owner', class: 'btn btn-default deactivatable-batch-control', title: translate('helpers.links.assign_owner'), data: { toggle: 'tooltip', container: 'body' } do
              = prepend_icon :user, translate('helpers.links.assign_owner'), caption_html: { class: 'sr-only' }
            = button_tag name: 'assign_tags', class: 'btn btn-default deactivatable-batch-control', title: translate('helpers.links.assign_tags'), data: { toggle: 'tooltip', container: 'body' } do
              = prepend_icon :tag, translate('helpers.links.assign_tags'), caption_html: { class: 'sr-only' }

          = paginate @images, right: true

          .btn-group.only-js.pull-right
            .btn.btn-success.btn-file
              = prepend_icon :upload, translate('helpers.links.upload', model: Image.model_name.human)
              = file_field_tag :image_upload, name: 'image[asset]', multiple: true, accept: 'image/gif|image/png|image/jpeg|image/jpg', data: { bfi_disabled: true, url: upload_admin_images_path(tag: params[:tag]) }

        #images_empty_hint.well.text-center{class: @images.any? ? 'hidden' : nil}
          = translate('views.hints.empty', model: Image.model_name.human(count: 2))

        %table#images.table.table-hover{class: @images.empty? ? 'hidden' : nil}
          %thead
            %tr
              %th.checkbox-cell
                %input{type: 'checkbox', class: 'js-only table-checkbox-all', data: { toggle: 'tableCheckboxes' }}
              %th.thumbnail-cell
              %th= sort_link @image_search, :translations_title
              %th= sort_link @image_search, :created_at, default_order: :desc
              %th.actions
          %tbody
            - @images.each do |image|
              = render image
