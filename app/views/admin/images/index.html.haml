#image_upload_dropzone
  = form_tag :batch_process_admin_images, method: :patch, remote: true do

    = page_header

    .row
      .col-sm-3
        .panel-group#filters
          = panel link_to(prepend_icon(:user, Image.human_attribute_name(:author_id), fixed_width: true), '#author', data: { toggle: 'collapse' }), body: false do
            .list-group#author.panel-collapse.collapse.in
              = active_link_to 'Egal', params.except(:author_id), class: 'list-group-item', active: params[:author_id].nil?
              - @users.each do |user|
                = active_link_to params.except(:page).merge(author_id: user.to_param), class: 'list-group-item', active: user.id == params[:author_id].to_i do
                  %span.avatar
                    %span.icon= gravatar_image_tag user.email, default: :mm, size: 24, class: 'img-circle'
                    %span.caption= user.name

          = panel link_to(prepend_icon(:calendar, Image.human_attribute_name(:created_at), fixed_width: true), '#period', data: { toggle: 'collapse' }), body: false do
            .list-group#period.panel-collapse.collapse{class: params[:period].nil? ? nil : 'in'}
              = active_link_to 'Egal', params.except(:period), class: 'list-group-item', active: params[:period].nil?
              - {'Heute' => 'today', 'Gestern' => 'yesterday', 'In dieser Woche' => 'week', 'In diesem Monat' => 'month'}.each do |caption, period|
                = active_link_to caption, params.except(:page).merge(period: period), class: 'list-group-item', active: period == params[:period]

          = panel link_to(prepend_icon(:file_photo, Image.human_attribute_name(:content_type), outline: true, fixed_width: true), '#content_type', data: { toggle: 'collapse' }), body: false do
            .list-group#content_type.panel-collapse.collapse{class: params[:content_type].nil? ? nil : 'in'}
              = active_link_to 'Egal', params.except(:content_type), class: 'list-group-item', active: params[:content_type].nil?
              - Image.permitted_content_types.each do |type|
                = active_link_to content_type(type), params.except(:page).merge(content_type: type), class: 'list-group-item', active: type == params[:content_type]

      .col-sm-9
        .row
          .col-sm-8
            .btn-toolbar
              = paginate @images
              .btn-group.only-js
                = button_tag type: 'button', class: 'btn btn-success fileinput-button' do
                  = prepend_icon :upload, translate('helpers.links.upload', model: Image.model_name.human)
                  = file_field_tag :image_upload, name: 'image[asset]', multiple: true, accept: 'image/gif|image/png|image/jpeg|image/jpg', data: { url: upload_admin_images_path }
              .btn-group
                = button_tag name: 'destroy', class: 'btn btn-danger deactivatable-batch-control', data: { hotkey: 'del', confirm: translate('helpers.confirmations.destroy_selected', model: Image.model_name.human(count: 2)) } do
                  = prepend_icon :trash, translate('helpers.links.destroy_selected'), outline: true
              .btn-group.only-js
                = button_tag name: 'assign_owner', class: 'btn btn-default deactivatable-batch-control', title: translate('helpers.links.assign_owner'), data: { toggle: 'tooltip', container: 'body' } do
                  = prepend_icon :user, translate('helpers.links.assign_owner'), caption_html: { class: 'sr-only' }
            %br

          .col-sm-4
            .btn-toolbar
              .search-component
                = text_field_tag :query, params[:query], class: 'search-input', placeholder: translate('helpers.prompts.search'), autofocus: true
                .btn-toolbar
                  = button_tag name: 'search', class: 'btn btn-search', title: translate('helpers.links.search'), data: { toggle: 'tooltip', placement: 'top', container: 'body' } do
                    = prepend_icon :search, translate('helpers.links.search'), caption_html: { class: 'sr-only' }
                  = button_link_to :admin_images, type: :search, title: translate('helpers.links.reset'), data: { toggle: 'tooltip', placement: 'top', container: 'body' } do
                    = prepend_icon :times, translate('helpers.links.reset'), caption_html: { class: 'sr-only' }
            %br

        #images_empty_hint.well.text-center{class: @images.any? ? 'hidden' : nil}
          = translate('views.hints.empty', model: Image.model_name.human(count: 2))

        %table#images.table.table-hover{class: @images.empty? ? 'hidden' : nil}
          %thead
            %tr
              %th.checkbox-cell
                %input{type: 'checkbox', class: 'js-only table-checkbox-all', data: { toggle: 'tableCheckboxes' }}
              %th.thumbnail-cell
              %th= sort_link_for @images, :title
              / %th.visible-lg= sort_link_for @images, :author
              %th= sort_link_for @images, :created_at
              %th.actions
          %tbody
            - @images.each do |image|
              = render image