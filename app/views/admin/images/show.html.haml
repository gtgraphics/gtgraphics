- present @image, with: Admin::ImagePresenter do |image|

  = page_header do
    .btn-toolbar
      .btn-group.pull-right
        = button_link_to [:edit, :admin, image], data: { toggle: 'dropdown' }, class: 'dropdown-toggle' do
          = prepend_icon :cog, translate('helpers.links.settings'), fixed_width: true, caption_html: { class: 'sr-only' }
        %ul.dropdown-menu{role: 'menu', aria_labelledby: 'dLabel'}
          %li= link_to prepend_icon(:pencil, translate('helpers.links.edit'), fixed_width: true), [:edit, :admin, image]
          %li= link_to prepend_icon(:crop, translate('helpers.links.edit_image'), fixed_width: true), [:customize, :admin, image], remote: true
          %li.divider
          %li= link_to prepend_icon(:folder_open, translate('helpers.links.convert_to', model: Attachment.model_name.human), outline: true, fixed_width: true), [:convert_to_attachment, :admin, image], method: :patch, data: { confirm: translate('helpers.confirmations.convert', model: Image.model_name.human, other_model: Attachment.model_name.human(count: 2)) }
          %li.divider
          %li= link_to prepend_icon(:trash, translate('helpers.links.destroy'), outline: true, fixed_width: true), [:admin, image], method: :delete, data: { confirm: translate('helpers.confirmations.destroy', model: Image.model_name.human) }

  .row
    .col-lg-8
      .panel.panel-invisible
        = link_to attached_asset_path(image, :custom), target: '_blank' do
          = image_tag attached_asset_path(image, :custom), class: 'img-responsive img-editable img-rounded center-block', alt: image.title

      #image_style_upload_dropzone
        = form_tag batch_process_admin_image_styles_path(@image), method: :patch, remote: true do
          .panel.panel-default
            .panel-heading
              %h4.panel-title= prepend_icon :picture, Image::Style.model_name.human(count: 2), outline: true, fixed_width: true
            = render 'admin/image/styles/table'
            .panel-footer.clearfix
              .btn-toolbar.pull-left
                .btn-group
                  = button_tag name: 'destroy', class: 'btn btn-danger deactivatable-batch-control', data: { hotkey: 'del', confirm: translate('helpers.confirmations.destroy_selected', model: Image::Style.model_name.human(count: 2)) } do
                    = prepend_icon :trash, translate('helpers.links.destroy_selected'), outline: true
              .btn-toolbar.pull-right
                .btn-group.only-js
                  %span.btn.btn-success.fileinput-button
                    = prepend_icon :upload, translate('helpers.links.upload', model: Image::Style.model_name.human)
                    = file_field_tag :image_style_upload, name: 'image_style[asset]', multiple: true, data: { url: upload_admin_image_styles_path(@image) }
                .btn-group
                  = button_link_to new_admin_image_style_path(@image), remote: true do
                    = prepend_icon :plus, translate('helpers.links.new', model: Image::Style.model_name.human)

    .col-lg-4
      .panel.panel-invisible
        = button_link_to [:download, :admin, image], type: :primary, size: :lg, block: true, data: { no_turbolink: true } do
          = prepend_icon :download, translate('helpers.links.download'), fixed_width: true
          %small (#{image.file_size})

      / Short Info
      - if image.author.present?
        = panel do
          .row
            .col-sm-3
              = image.author.gravatar(true)
            .col-sm-9
              = image.author.name(true)
              .text-muted= image.updated_at
              .text-muted= image.styles_count

      - if image.description.present?
        = panel do
          = liquify image.description, with: image

      / Details
      = panel prepend_icon(:info, translate('views.admin.images.headlines.details'), fixed_width: true) do
        %dl.dl-horizontal
          = image.list_item :content_type
          = image.list_item :file_size, true
          = image.list_item :dimensions, true
          = image.list_item :pixels_count
          = image.list_item :artist if image.artist.present?
          = image.list_item :camera if image.camera.present?
          = image.list_item :software if image.software.present?
          = image.list_item :taken_at if image.taken_at.present?
          = image.list_item :pages_count, true
