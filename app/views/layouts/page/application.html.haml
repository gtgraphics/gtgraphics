- content_for :stylesheets do
  = stylesheet_link_tag 'application', media: 'all', data: { turbolinks_track: true }

- content_for :javascripts do
  = javascript_include_tag 'application', data: { turbolinks_track: true }

- content_for :head do
  %meta{name: 'description', content: @page.meta_description || ''}
  %meta{name: 'keywords', content: @page.meta_keywords || ''}
  %meta{name: 'robots', content: @page.indexable? ? 'index,follow' : 'noindex,follow'}

  - # Meta Elements for OpenGraph/Social Media integration
  - if content_for? :social_meta_tags
    = yield :social_meta_tags
  - else
    %meta{property: 'og:title', content: @page.title}
    %meta{property: 'og:description', content: @page.meta_description || ''}
  %meta{property: 'og:url', content: page_url(@page)}

  - # References to other translations
  %link{rel: 'canonical', href: page_url(@page)}  
  - @page.translated_locales.reject { |locale| locale == I18n.locale }.each do |translated_locale|
    %link{rel: 'alternate', hreflang: translated_locale, href: page_url(@page, locale: translated_locale)}

- content_for :body_styles, "background-image: url(#{background_url})"
    
- content_for :content do
  = facebook_sdk_anchor

  .container

    #content_wrapper.row
      .col-sm-12.col-md-10

        #logo
          = image_tag 'logo.png'
          %h1.sr-only GT Graphics

        %nav.navbar.navbar-top{role: 'navigation'}
          .navbar-header
            / = link_to :root_page, class: 'navbar-brand' do
            /   = image_tag 'brand.png', alt: 'GT Graphics'
            /   %span.sr-only GT Graphics

            %button.navbar-toggle{type: 'button', data: { toggle: 'collapse', target: '.navbar-collapse' }}
              = icon(:bars, fixed_width: true)
              %span.sr-only= translate('helpers.links.toggle_navigation')

          .navbar-collapse.collapse
            %ul.nav.navbar-nav
              - menu_items.each do |page|
                = active_link_to page.title, page, wrap_tag: :li, active: @page.self_and_ancestors.include?(page)

        #page_content
          = render_flashes
          = render 'breadcrumbs'

          - if content_for? :page_content
            = yield :page_content
          - else
            = yield

  = render 'footer'

= render template: 'layouts/application'